[{"E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\reportWebVitals.js":"1","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\App.js":"2","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\index.js":"3","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\components\\auth\\Login.js":"4","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\services\\auth\\LoginSrvice.js":"5","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\services\\users\\UserData.js":"6","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\components\\partial\\Header.js":"7","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\router\\Route.js":"8","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\views\\users\\UserContainer.js":"9","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\components\\user\\UserList.js":"10","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\components\\partial\\Sidebar.js":"11","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\views\\permissions\\PermissionContainer.js":"12","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\views\\roles\\RoleContainer.js":"13","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\services\\roles\\RolePermissionData.js":"14","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\components\\role\\RoleList.js":"15","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\services\\permissions\\PermissonMasterData.js":"16","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\components\\permission\\PermissionList.js":"17","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\components\\user\\AssignRole.js":"18","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\services\\roles\\RoleMasterData.js":"19","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\services\\users\\UserHasNoRole.js":"20","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\components\\user\\AssignRoleEdit.js":"21","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\components\\role\\AddRole.js":"22","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\components\\role\\EditRole.js":"23","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\views\\posts\\List.js":"24","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\services\\utils\\Helper.js":"25"},{"size":362,"mtime":1606737275843,"results":"26","hashOfConfig":"27"},{"size":1342,"mtime":1609940597291,"results":"28","hashOfConfig":"27"},{"size":511,"mtime":1609318524426,"results":"29","hashOfConfig":"27"},{"size":2851,"mtime":1610025295360,"results":"30","hashOfConfig":"27"},{"size":330,"mtime":1609677736366,"results":"31","hashOfConfig":"27"},{"size":732,"mtime":1610367281389,"results":"32","hashOfConfig":"27"},{"size":1813,"mtime":1610022413528,"results":"33","hashOfConfig":"27"},{"size":489,"mtime":1609666496638,"results":"34","hashOfConfig":"27"},{"size":550,"mtime":1609928162989,"results":"35","hashOfConfig":"27"},{"size":4298,"mtime":1610969886960,"results":"36","hashOfConfig":"27"},{"size":875,"mtime":1610025308291,"results":"37","hashOfConfig":"27"},{"size":602,"mtime":1610023301927,"results":"38","hashOfConfig":"27"},{"size":575,"mtime":1610020340973,"results":"39","hashOfConfig":"27"},{"size":983,"mtime":1610025175122,"results":"40","hashOfConfig":"27"},{"size":4556,"mtime":1611124518865,"results":"41","hashOfConfig":"27"},{"size":715,"mtime":1610456736680,"results":"42","hashOfConfig":"27"},{"size":1419,"mtime":1610445675459,"results":"43","hashOfConfig":"27"},{"size":3430,"mtime":1610358608128,"results":"44","hashOfConfig":"27"},{"size":401,"mtime":1610022590718,"results":"45","hashOfConfig":"27"},{"size":542,"mtime":1610361352558,"results":"46","hashOfConfig":"27"},{"size":3025,"mtime":1610367973168,"results":"47","hashOfConfig":"27"},{"size":1610,"mtime":1610446341999,"results":"48","hashOfConfig":"27"},{"size":4034,"mtime":1610968971763,"results":"49","hashOfConfig":"27"},{"size":296,"mtime":1609920162200,"results":"50","hashOfConfig":"27"},{"size":230,"mtime":1610457357328,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"37wsgc",{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\reportWebVitals.js",[],["111","112"],"E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\App.js",["113"],"// import logo from './assets/images/logo.svg';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./assets/css/App.css\";\n// import Router from \"./router/router\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Login from \"./components/auth/Login\";\nimport User from \"./views/users/UserContainer\";\nimport Header from \"./components/partial/Header\";\nimport List from \"./views/posts/List\";\nimport UserContainer from \"./views/users/UserContainer\";\nimport RoleContainer from \"./views/roles/RoleContainer\";\nimport PermissionContainer from \"./views/permissions/PermissionContainer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Router>\n    <div>\n<Header></Header>\n      {/* A <Switch> looks through its children <Route>s and\n      renders the first one that matches the current URL. */}\n      <Switch>\n        <Route path=\"/users\">\n          <UserContainer></UserContainer>\n        </Route>\n        <Route path=\"/posts\">\n        <List></List>\n        </Route>\n        <Route path=\"/roles\">\n        <RoleContainer></RoleContainer>\n        </Route>\n        <Route path=\"/permissions\">\n        <PermissionContainer></PermissionContainer>\n        </Route>\n        <Route path=\"/\">\n          <Login />\n        </Route>\n      </Switch>\n    </div>\n  </Router>\n\n        </div>\n  );\n}\n\nexport default App;\n",["114","115"],"E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\index.js",[],"E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\components\\auth\\Login.js",[],"E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\services\\auth\\LoginSrvice.js",[],["116","117"],"E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\services\\users\\UserData.js",[],"E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\components\\partial\\Header.js",[],"E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\router\\Route.js",["118","119"],"E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\views\\users\\UserContainer.js",[],"E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\components\\user\\UserList.js",["120"],"import React, { useEffect, useState } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport getUserData from \"../../services/users/UserData\";\r\nimport AssignRole from \"./AssignRole\";\r\nimport AssignRoleEdit from \"./AssignRoleEdit\";\r\nfunction UserList() {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const handleCloseModal = () => setShowModal(false);\r\n  const handleShowMOdal = () => setShowModal(true);\r\n  const onclose = () => setShowModal(false);\r\n\r\n  const handleCloseEditMOdal = () => setShowEditModal(false);\r\n  const handleShowEditMOdal = () => setShowEditModal(true);\r\n  const [users, setUsers] = useState({\r\n    userDataAll: [],\r\n  });\r\n  const [editData, setEditData] = useState(\"\");\r\n  useEffect(() => {\r\n    let userData = { ...users };\r\n    userData.userDataAll = getUserData();\r\n    setUsers(userData);\r\n  }, [setUsers]);\r\n  const assignRole = (data) => {\r\n    const userData = { ...users };\r\n    for (let index = 0; index < userData.userDataAll.length; index++) {\r\n      if (userData.userDataAll[index].id === data.id) {\r\n        userData.userDataAll[index] = data;\r\n      }\r\n    }\r\n    setUsers(userData);\r\n    setShowModal(false);\r\n    alert(\"Success!  Role asigned.\");\r\n  };\r\n  const assignRoleUpdate = (data) => {\r\n    // console.log(\"data\", data);\r\n\r\n    const userData = { ...users };\r\n\r\n    for (let index = 0; index < userData.userDataAll.length; index++) {\r\n      const item = userData.userDataAll[index].id;\r\n      if (item.id === data.id) {\r\n        userData.userDataAll[index] = data;\r\n      }\r\n    }\r\n    setUsers(userData);\r\n\r\n    setShowEditModal(false);\r\n    alert(\"Success!  User edited.\");\r\n  };\r\n  const editeUser = (user) => {\r\n    setEditData(user);\r\n    handleShowEditMOdal();\r\n  };\r\n  const deleteUser = (index) => {\r\n    const data = { ...users };\r\n    data.userDataAll.splice(index, 1);\r\n    setUsers(data);\r\n    alert(\"User Deleted.\");\r\n  };\r\n\r\n  // console.log(users)\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className=\"float-left\">\r\n          <h2> User Lists</h2>\r\n        </div>\r\n        <div className=\"float-right\">\r\n          <button className=\"btn btn-success\" onClick={handleShowMOdal}>\r\n            \r\n            + Assign Role\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <table className=\"table table-bordered\">\r\n        <thead>\r\n          <tr>\r\n            <th>NO</th>\r\n            <th>Name</th>\r\n            <th>UserName</th>\r\n            <th>role</th>\r\n            <th>action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users.userDataAll.length > 0 ? (\r\n            users.userDataAll.map((user, index) => {\r\n              return (\r\n                <tr key={user.id}>\r\n                  <td>{user.id}</td>\r\n                  <td>{user.name}</td>\r\n                  <td>{user.username}</td>\r\n                  <td>{user.role != null ? user.role.name : \"-\"}</td>\r\n                  <td>\r\n                    <button\r\n                      className=\"btn btn-success\"\r\n                      onClick={() => editeUser(user)}\r\n                    >\r\n                      Edit\r\n                    </button>\r\n\r\n                    <button\r\n                      className=\"btn btn-danger\"\r\n                      onClick={() => deleteUser(index)}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })\r\n          ) : (\r\n            <tr>\r\n              <td colSpan={5} className=\"text-danger text-center\">\r\n                No data found.\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      <Modal\r\n        show={showEditModal}\r\n        onHide={handleCloseEditMOdal}\r\n        animation={true}\r\n        centered\r\n      >\r\n        <AssignRoleEdit\r\n          user={editData}\r\n          onsubmitEdit={assignRoleUpdate}\r\n          onCloseEidt={handleCloseEditMOdal}\r\n        ></AssignRoleEdit>\r\n      </Modal>\r\n      <Modal\r\n        show={showModal}\r\n        onHide={handleCloseModal}\r\n        animation={true}\r\n        centered\r\n      >\r\n        <AssignRole onsubmit={assignRole} onClose={onclose}></AssignRole>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserList;\r\n","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\components\\partial\\Sidebar.js",["121","122","123"],"import React, { useState } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nfunction Sidebar(props) {\r\n  const [pathName] = useState(props.history.location.pathname);\r\n  // console.log(props);\r\n  return (\r\n    <ul class=\"list-group\">\r\n      <li\r\n        class={\r\n          pathName == \"/users\" ? \"list-group-item active\" : \"list-group-item\"\r\n        }\r\n      >\r\n        <Link to=\"/users\"> Users</Link>\r\n      </li>\r\n      <li\r\n        class={\r\n          pathName == \"/roles\" ? \"list-group-item active\" : \"list-group-item\"\r\n        }\r\n      >\r\n        <Link to=\"/roles\"> Roles</Link>\r\n      </li>\r\n      <li\r\n        class={\r\n          pathName == \"/permissions\" ? \"list-group-item active\" : \"list-group-item\"\r\n        }\r\n      >\r\n        <Link to=\"/permissions\"> Permissions</Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default withRouter(Sidebar);\r\n","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\views\\permissions\\PermissionContainer.js",[],"E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\views\\roles\\RoleContainer.js",[],"E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\services\\roles\\RolePermissionData.js",[],["124","125"],"E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\components\\role\\RoleList.js",["126"],"E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\services\\permissions\\PermissonMasterData.js",[],"E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\components\\permission\\PermissionList.js",[],"E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\components\\user\\AssignRole.js",["127"],"import React, { useEffect, useState } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nimport getRoleMasterData from \"../../services/roles/RoleMasterData\";\r\nimport getUserDataHasNoRole from \"../../services/users/UserHasNoRole\";\r\nimport getUserData from \"../../services/users/UserData\";\r\n\r\nconst AssignRole = (props) => {\r\n  const [users, setUsers] = useState([]);\r\n  const [roles, setRoles] = useState([]);\r\n\r\n  const [user, setUser] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n\r\n  const changeUser = (e) => {\r\n    setUser(e.target.value);\r\n  };\r\n\r\n  const changeRole = (e) => {\r\n    setRole(e.target.value);\r\n  };\r\n  const submitRole = () => {\r\n    if (user === \"\" || role === \"\") {\r\n      alert(\"Please fill all the values\");\r\n      return false;\r\n    }\r\n    const userData = JSON.parse(user);\r\n    const roleData = JSON.parse(role);\r\n    const data = {\r\n      id: userData.id,\r\n      username: userData.username,\r\n      name: userData.name,\r\n      password: userData.password,\r\n      role: {\r\n        id: roleData.id,\r\n        name: roleData.name,\r\n      },\r\n    };\r\n\r\n    props.onsubmit(data);\r\n  };\r\n  //   console.log(\"props\", props);\r\n\r\n  useEffect(() => {\r\n    // setUsers(getUserDataHasNoRole);\r\n    setUsers(getUserData);\r\n    setRoles(getRoleMasterData);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Assign Role</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n            <Form.Label column sm=\"4\">\r\n              Select User\r\n            </Form.Label>\r\n            <Col sm=\"6\">\r\n              <select\r\n                className=\"form-control\"\r\n                value={user}\r\n                onChange={changeUser}\r\n                required\r\n              >\r\n                <option disabled value=\"\">\r\n                  Please select a user\r\n                </option>\r\n                {users.map((item, index) => (\r\n                  <option value={JSON.stringify(item)} key={index}>\r\n                    {item.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </Col>\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n            <Form.Label column sm=\"4\">\r\n              Select Role\r\n            </Form.Label>\r\n            <Col sm=\"6\">\r\n              <select\r\n                className=\"form-control\"\r\n                value={role}\r\n                onChange={changeRole}\r\n                required\r\n              >\r\n                <option disabled value=\"\">\r\n                  Please select a role\r\n                </option>\r\n                {roles.map((item, index) => (\r\n                  <option value={JSON.stringify(item)} key={index}>\r\n                    {item.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </Col>\r\n          </Form.Group>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <button onClick={props.onClose} className=\"btn btn-danger\">\r\n          Cancel\r\n        </button>\r\n        <button onClick={submitRole} className=\"btn btn-success\" type=\"submit\">\r\n          Save\r\n        </button>\r\n      </Modal.Footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AssignRole;\r\n","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\services\\roles\\RoleMasterData.js",[],"E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\services\\users\\UserHasNoRole.js",[],"E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\components\\user\\AssignRoleEdit.js",["128"],"E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\components\\role\\AddRole.js",[],"E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\components\\role\\EditRole.js",["129","130","131"],"import React, { useState, useEffect } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport getPermissonMasterData from \"../../services/permissions/PermissonMasterData\";\r\nimport { checkObjectInArray } from \"../../services/utils/Helper\";\r\n\r\nconst EditRole = (props) => {\r\n  const [roleData, setRoleData] = useState({\r\n    id: \"\",\r\n    name: \"\",\r\n    permission: [],\r\n  });\r\n  const [permissions, setPermissions] = useState({\r\n    allPermissions: [],\r\n  });\r\n  const { role, onCloseEdit, onSubmitEdit } = props;\r\n  const changeRole = (e) => {\r\n    setRoleData(e.target.value);\r\n  };\r\n  const submitRole = () => {\r\n    if (roleData.name === \"\") {\r\n      alert(\"Please enter role name.\");\r\n      return false;\r\n    }\r\n    let selectedPermissions = [];\r\n    permissions.allPermissions.forEach((item, index) => {\r\n      if (item.isChecked) {\r\n        selectedPermissions.push(item);\r\n      }\r\n    });\r\n    const data = {\r\n      id: roleData.id,\r\n      name: roleData.name,\r\n      permissions: selectedPermissions,\r\n    };\r\n    onSubmitEdit(data);\r\n  };\r\n  const checkedInArray = (item) => {\r\n    return checkObjectInArray(item, roleData.permission, \"id\");\r\n  };\r\n  useEffect(() => {\r\n    let roleDatanew = { ...roleData };\r\n    roleDatanew.id = role.id;\r\n    roleDatanew.name = role.name;\r\n    roleDatanew.permission = role.permission;\r\n    setRoleData(roleDatanew);\r\n  }, [setRoleData]);\r\n  useEffect(() => {\r\n    let permissionData = { ...permissions };\r\n    let getAllPermissonMasterData = getPermissonMasterData();\r\n    getAllPermissonMasterData.forEach((item, index) => {\r\n      item.isChecked = checkObjectInArray(item, role.permission, \"id\");\r\n      permissionData.allPermissions.push(item);\r\n    });\r\n    setPermissions(permissionData);\r\n  }, [setPermissions]);\r\n\r\n  const checkPermission = (e, index) => {\r\n    let permissionData = { ...permissions };\r\n    const checkedStatus = e.target.checked;\r\n    permissionData.allPermissions[index].isChecked = checkedStatus;\r\n    setPermissions(permissionData);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Assign New Role</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n            <Form.Label column sm=\"4\">\r\n              Role\r\n            </Form.Label>\r\n            <Col sm=\"6\">\r\n              <input\r\n                className=\"form-control\"\r\n                value={roleData.name}\r\n                onChange={changeRole}\r\n                placeholder=\"Enter Role Name.\"\r\n              />\r\n            </Col>\r\n          </Form.Group>\r\n          <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n            <Form.Label column sm=\"4\">\r\n              Permissions\r\n            </Form.Label>\r\n            <Col sm=\"6\">\r\n              {permissions.allPermissions.length > 0 ? (\r\n                permissions.allPermissions.map((item, index) => (\r\n                  <>\r\n                    <label>\r\n                      <input\r\n                        key={index}\r\n                        type=\"checkbox\"\r\n                        value={JSON.stringify(item)}\r\n                        checked={item.isChecked ? true : false}\r\n                        onChange={(e) => checkPermission(e, index)}\r\n                      />\r\n                      {item.name}\r\n                    </label>\r\n                    <br />\r\n                  </>\r\n                ))\r\n              ) : (\r\n                <p>No data found</p>\r\n              )}\r\n            </Col>\r\n          </Form.Group>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <button onClick={onCloseEdit} className=\"btn btn-danger\">\r\n          Cancel\r\n        </button>\r\n        <button onClick={submitRole} className=\"btn btn-success\" type=\"submit\">\r\n          Save\r\n        </button>\r\n      </Modal.Footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditRole;\r\n","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\views\\posts\\List.js",[],"E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\services\\utils\\Helper.js",[],{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":7,"column":8,"nodeType":"138","messageId":"139","endLine":7,"endColumn":12},{"ruleId":"132","replacedBy":"140"},{"ruleId":"134","replacedBy":"141"},{"ruleId":"132","replacedBy":"142"},{"ruleId":"134","replacedBy":"143"},{"ruleId":"136","severity":1,"message":"144","line":3,"column":27,"nodeType":"138","messageId":"139","endLine":3,"endColumn":33},{"ruleId":"136","severity":1,"message":"145","line":3,"column":43,"nodeType":"138","messageId":"139","endLine":3,"endColumn":47},{"ruleId":"146","severity":1,"message":"147","line":23,"column":6,"nodeType":"148","endLine":23,"endColumn":16,"suggestions":"149"},{"ruleId":"150","severity":1,"message":"151","line":10,"column":20,"nodeType":"152","messageId":"153","endLine":10,"endColumn":22},{"ruleId":"150","severity":1,"message":"151","line":17,"column":20,"nodeType":"152","messageId":"153","endLine":17,"endColumn":22},{"ruleId":"150","severity":1,"message":"151","line":24,"column":20,"nodeType":"152","messageId":"153","endLine":24,"endColumn":22},{"ruleId":"132","replacedBy":"154"},{"ruleId":"134","replacedBy":"155"},{"ruleId":"146","severity":1,"message":"156","line":23,"column":6,"nodeType":"148","endLine":23,"endColumn":16,"suggestions":"157"},{"ruleId":"136","severity":1,"message":"158","line":8,"column":8,"nodeType":"138","messageId":"139","endLine":8,"endColumn":28},{"ruleId":"146","severity":1,"message":"159","line":51,"column":6,"nodeType":"148","endLine":51,"endColumn":8,"suggestions":"160"},{"ruleId":"136","severity":1,"message":"161","line":40,"column":9,"nodeType":"138","messageId":"139","endLine":40,"endColumn":23},{"ruleId":"146","severity":1,"message":"162","line":49,"column":6,"nodeType":"148","endLine":49,"endColumn":19,"suggestions":"163"},{"ruleId":"146","severity":1,"message":"164","line":58,"column":6,"nodeType":"148","endLine":58,"endColumn":22,"suggestions":"165"},"no-native-reassign",["166"],"no-negated-in-lhs",["167"],"no-unused-vars","'User' is defined but never used.","Identifier","unusedVar",["166"],["167"],["166"],["167"],"'Router' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'users'. Either include it or remove the dependency array.","ArrayExpression",["168"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["166"],["167"],"React Hook useEffect has a missing dependency: 'roles'. Either include it or remove the dependency array.",["169"],"'getUserDataHasNoRole' is defined but never used.","React Hook useEffect has a missing dependency: 'user.role'. Either include it or remove the dependency array.",["170"],"'checkedInArray' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'role.id', 'role.name', 'role.permission', and 'roleData'. Either include them or remove the dependency array.",["171"],"React Hook useEffect has missing dependencies: 'permissions' and 'role.permission'. Either include them or remove the dependency array.",["172"],"no-global-assign","no-unsafe-negation",{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},"Update the dependencies array to be: [setUsers, users]",{"range":"183","text":"184"},"Update the dependencies array to be: [roles, setRoles]",{"range":"185","text":"186"},"Update the dependencies array to be: [user.role]",{"range":"187","text":"188"},"Update the dependencies array to be: [role.id, role.name, role.permission, roleData, setRoleData]",{"range":"189","text":"190"},"Update the dependencies array to be: [permissions, role.permission, setPermissions]",{"range":"191","text":"192"},[908,918],"[setUsers, users]",[954,964],"[roles, setRoles]",[1441,1443],"[user.role]",[1501,1514],"[role.id, role.name, role.permission, roleData, setRoleData]",[1879,1895],"[permissions, role.permission, setPermissions]"]