[{"E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\reportWebVitals.js":"1","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\App.js":"2","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\index.js":"3","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\components\\auth\\Login.js":"4","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\services\\auth\\LoginSrvice.js":"5","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\services\\users\\UserData.js":"6","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\components\\partial\\Header.js":"7","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\router\\Route.js":"8","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\views\\users\\UserContainer.js":"9","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\components\\user\\UserList.js":"10","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\components\\partial\\Sidebar.js":"11","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\views\\permissions\\PermissionContainer.js":"12","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\views\\roles\\RoleContainer.js":"13","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\services\\roles\\RolePermissionData.js":"14","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\components\\role\\RoleList.js":"15","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\services\\permissions\\PermissonMasterData.js":"16","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\components\\permission\\PermissionList.js":"17","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\components\\user\\AssignRole.js":"18","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\services\\roles\\RoleMasterData.js":"19","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\services\\users\\UserHasNoRole.js":"20","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\components\\user\\AssignRoleEdit.js":"21"},{"size":362,"mtime":1606737275843,"results":"22","hashOfConfig":"23"},{"size":1342,"mtime":1609940597291,"results":"24","hashOfConfig":"23"},{"size":511,"mtime":1609318524426,"results":"25","hashOfConfig":"23"},{"size":2851,"mtime":1610025295360,"results":"26","hashOfConfig":"23"},{"size":330,"mtime":1609677736366,"results":"27","hashOfConfig":"23"},{"size":732,"mtime":1610367281389,"results":"28","hashOfConfig":"23"},{"size":1813,"mtime":1610022413528,"results":"29","hashOfConfig":"23"},{"size":489,"mtime":1609666496638,"results":"30","hashOfConfig":"23"},{"size":550,"mtime":1609928162989,"results":"31","hashOfConfig":"23"},{"size":4311,"mtime":1610371327645,"results":"32","hashOfConfig":"23"},{"size":875,"mtime":1610025308291,"results":"33","hashOfConfig":"23"},{"size":602,"mtime":1610023301927,"results":"34","hashOfConfig":"23"},{"size":575,"mtime":1610020340973,"results":"35","hashOfConfig":"23"},{"size":983,"mtime":1610025175122,"results":"36","hashOfConfig":"23"},{"size":2316,"mtime":1610371542770,"results":"37","hashOfConfig":"23"},{"size":715,"mtime":1610022594588,"results":"38","hashOfConfig":"23"},{"size":2039,"mtime":1610357391306,"results":"39","hashOfConfig":"23"},{"size":3430,"mtime":1610358608128,"results":"40","hashOfConfig":"23"},{"size":401,"mtime":1610022590718,"results":"41","hashOfConfig":"23"},{"size":542,"mtime":1610361352558,"results":"42","hashOfConfig":"23"},{"size":3025,"mtime":1610367973168,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"37wsgc",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\reportWebVitals.js",[],["94","95"],"E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\App.js",["96"],"// import logo from './assets/images/logo.svg';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./assets/css/App.css\";\n// import Router from \"./router/router\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Login from \"./components/auth/Login\";\nimport User from \"./views/users/UserContainer\";\nimport Header from \"./components/partial/Header\";\nimport List from \"./views/posts/List\";\nimport UserContainer from \"./views/users/UserContainer\";\nimport RoleContainer from \"./views/roles/RoleContainer\";\nimport PermissionContainer from \"./views/permissions/PermissionContainer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Router>\n    <div>\n<Header></Header>\n      {/* A <Switch> looks through its children <Route>s and\n      renders the first one that matches the current URL. */}\n      <Switch>\n        <Route path=\"/users\">\n          <UserContainer></UserContainer>\n        </Route>\n        <Route path=\"/posts\">\n        <List></List>\n        </Route>\n        <Route path=\"/roles\">\n        <RoleContainer></RoleContainer>\n        </Route>\n        <Route path=\"/permissions\">\n        <PermissionContainer></PermissionContainer>\n        </Route>\n        <Route path=\"/\">\n          <Login />\n        </Route>\n      </Switch>\n    </div>\n  </Router>\n\n        </div>\n  );\n}\n\nexport default App;\n",["97","98"],"E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\index.js",[],"E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\components\\auth\\Login.js",[],"E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\services\\auth\\LoginSrvice.js",[],["99","100"],"E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\services\\users\\UserData.js",[],"E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\components\\partial\\Header.js",[],"E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\router\\Route.js",["101","102"],"E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\views\\users\\UserContainer.js",[],"E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\components\\user\\UserList.js",["103"],"E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\components\\partial\\Sidebar.js",["104","105","106"],"import React, { useState } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nfunction Sidebar(props) {\r\n  const [pathName] = useState(props.history.location.pathname);\r\n  // console.log(props);\r\n  return (\r\n    <ul class=\"list-group\">\r\n      <li\r\n        class={\r\n          pathName == \"/users\" ? \"list-group-item active\" : \"list-group-item\"\r\n        }\r\n      >\r\n        <Link to=\"/users\"> Users</Link>\r\n      </li>\r\n      <li\r\n        class={\r\n          pathName == \"/roles\" ? \"list-group-item active\" : \"list-group-item\"\r\n        }\r\n      >\r\n        <Link to=\"/roles\"> Roles</Link>\r\n      </li>\r\n      <li\r\n        class={\r\n          pathName == \"/permissions\" ? \"list-group-item active\" : \"list-group-item\"\r\n        }\r\n      >\r\n        <Link to=\"/permissions\"> Permissions</Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default withRouter(Sidebar);\r\n","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\views\\permissions\\PermissionContainer.js",[],"E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\views\\roles\\RoleContainer.js",[],"E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\services\\roles\\RolePermissionData.js",[],"E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\components\\role\\RoleList.js",["107","108","109","110","111"],"import React, { useEffect, useState } from \"react\";\r\nimport getPermissonMasterData from \"../../services/roles/RolePermissionData\";\r\n\r\nfunction RoleList() {\r\n  const [roles, setRoles] = useState({ rolesDataAll: [] });\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const [editData, setEditData] = useState(\"\");\r\n  // const [showEditModal, setShowEditModal] = useState(false);\r\n  // const handleCloseEditModal = () => setShowModal(false);\r\n  // const handleShowEditMOdal = () => setShowModal(true);\r\n  useEffect(() => {\r\n    let roleData={...roles}\r\n    roleData.rolesDataAll=getPermissonMasterData()\r\n    setRoles(roleData);\r\n   \r\n  }, [setRoles]);\r\n  // Delete Role\r\n  const deleteRole= (index) => {\r\n    const roleData = { ...roles };\r\n    roleData.rolesDataAll.splice(index, 1);\r\n    setRoles(roleData);\r\n    alert(\"Role Deleted.\");\r\n  };\r\n  return (\r\n    <>\r\n      <h2> Role Lists</h2>\r\n      <table className=\"table table-bordered\">\r\n        <thead>\r\n          <tr>\r\n            <th>NO</th>\r\n            <th>Name</th>\r\n            <th>Permissions</th>\r\n            <th>action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {roles.rolesDataAll.length > 0 ? (\r\n            roles.rolesDataAll.map((item, index) => {\r\n              return (\r\n                <tr key={item.id}>\r\n                  <td>{item.id}</td>\r\n                  <td>{item.name}</td>\r\n                  <td>\r\n                    {item.permission.map((i, k) => (\r\n                      <span key={k}>\r\n                        {i.name}\r\n                        <br />\r\n                      </span>\r\n                    ))}\r\n                  </td>{\" \"}\r\n                  <td>\r\n                    <button className=\"btn btn-success\" >\r\n                      Edit\r\n                    </button>\r\n\r\n                    <button className=\"btn btn-danger \" onClick={()=>deleteRole(item)}>\r\n                      Delete\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })\r\n          ) : (\r\n            <tr>\r\n              <td colSpan={5} className=\"text-danger text-center\">\r\n                No data found.\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      \r\n    </>\r\n  );\r\n}\r\n\r\nexport default RoleList;\r\n","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\services\\permissions\\PermissonMasterData.js",[],"E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\components\\permission\\PermissionList.js",["112","113"],"import React, { useEffect, useState } from \"react\";\r\nimport getPermissonMasterData from \"../../services/permissions/PermissonMasterData\";\r\n\r\nfunction PermissionList() {\r\n  const [items, setitems] = useState([\r\n    // {\r\n    //   itemname: \"sumon\",\r\n    //   name: \"sumon ahmed\",\r\n    //   password: \"000\",\r\n    //   role: \"admin\",\r\n    // },\r\n    // {\r\n    //   itemname: \"sumon1\",\r\n    //   name: \"sumon ahmed\",\r\n    //   password: \"111\",\r\n    //   role: \"super_admin\",\r\n    // },\r\n    // {\r\n    //   itemname: \"sumon3\",\r\n    //   name: \"sumon ahmed\",\r\n    //   password: \"111\",\r\n    //   role: null,\r\n    // },\r\n    // {\r\n    //   itemname: \"sumon4\",\r\n    //   name: \"sumon ahmed\",\r\n    //   password: \"111\",\r\n    //   role: \"executive\",\r\n    // },\r\n  ]);\r\n  useEffect(() => {\r\n    setitems(getPermissonMasterData);\r\n    // return () => {\r\n    //   cleanup\r\n    // }\r\n  }, [setitems]);\r\n  // console.log(items)\r\n  return (\r\n    <>\r\n      <h2> Role Lists</h2>\r\n      <table className=\"table table-bordered\">\r\n        <thead>\r\n          <tr>\r\n            <th>NO</th>\r\n            <th>Name</th>\r\n            \r\n            <th>action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {items.length > 0 ? (\r\n            items.map((item,index) => {\r\n              return (\r\n                <tr key={item.id}>\r\n                  <td>{item.id}</td>\r\n                  <td>{item.name}</td>\r\n                  \r\n                  <td>\r\n                    <a className=\"btn btn-success\" href=\"#\">\r\n                      Edit\r\n                    </a>\r\n\r\n                    <a className=\"btn btn-danger \" href=\"#\">\r\n                      Delete\r\n                    </a>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })\r\n          ) : (\r\n            <tr>\r\n              <td colSpan={5} className=\"text-danger text-center\">\r\n                No data found.\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PermissionList;\r\n","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\components\\user\\AssignRole.js",["114"],"import React, { useEffect, useState } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nimport getRoleMasterData from \"../../services/roles/RoleMasterData\";\r\nimport getUserDataHasNoRole from \"../../services/users/UserHasNoRole\";\r\nimport getUserData from \"../../services/users/UserData\";\r\n\r\nconst AssignRole = (props) => {\r\n  const [users, setUsers] = useState([]);\r\n  const [roles, setRoles] = useState([]);\r\n\r\n  const [user, setUser] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n\r\n  const changeUser = (e) => {\r\n    setUser(e.target.value);\r\n  };\r\n\r\n  const changeRole = (e) => {\r\n    setRole(e.target.value);\r\n  };\r\n  const submitRole = () => {\r\n    if (user === \"\" || role === \"\") {\r\n      alert(\"Please fill all the values\");\r\n      return false;\r\n    }\r\n    const userData = JSON.parse(user);\r\n    const roleData = JSON.parse(role);\r\n    const data = {\r\n      id: userData.id,\r\n      username: userData.username,\r\n      name: userData.name,\r\n      password: userData.password,\r\n      role: {\r\n        id: roleData.id,\r\n        name: roleData.name,\r\n      },\r\n    };\r\n\r\n    props.onsubmit(data);\r\n  };\r\n  //   console.log(\"props\", props);\r\n\r\n  useEffect(() => {\r\n    // setUsers(getUserDataHasNoRole);\r\n    setUsers(getUserData);\r\n    setRoles(getRoleMasterData);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Assign Role</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n            <Form.Label column sm=\"4\">\r\n              Select User\r\n            </Form.Label>\r\n            <Col sm=\"6\">\r\n              <select\r\n                className=\"form-control\"\r\n                value={user}\r\n                onChange={changeUser}\r\n                required\r\n              >\r\n                <option disabled value=\"\">\r\n                  Please select a user\r\n                </option>\r\n                {users.map((item, index) => (\r\n                  <option value={JSON.stringify(item)} key={index}>\r\n                    {item.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </Col>\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n            <Form.Label column sm=\"4\">\r\n              Select Role\r\n            </Form.Label>\r\n            <Col sm=\"6\">\r\n              <select\r\n                className=\"form-control\"\r\n                value={role}\r\n                onChange={changeRole}\r\n                required\r\n              >\r\n                <option disabled value=\"\">\r\n                  Please select a role\r\n                </option>\r\n                {roles.map((item, index) => (\r\n                  <option value={JSON.stringify(item)} key={index}>\r\n                    {item.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </Col>\r\n          </Form.Group>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <button onClick={props.onClose} className=\"btn btn-danger\">\r\n          Cancel\r\n        </button>\r\n        <button onClick={submitRole} className=\"btn btn-success\" type=\"submit\">\r\n          Save\r\n        </button>\r\n      </Modal.Footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AssignRole;\r\n","E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\services\\roles\\RoleMasterData.js",[],"E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\services\\users\\UserHasNoRole.js",[],"E:\\xamp\\htdocs\\Laravel-react-project\\react-role-management\\src\\components\\user\\AssignRoleEdit.js",["115"],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":7,"column":8,"nodeType":"122","messageId":"123","endLine":7,"endColumn":12},{"ruleId":"116","replacedBy":"124"},{"ruleId":"118","replacedBy":"125"},{"ruleId":"116","replacedBy":"126"},{"ruleId":"118","replacedBy":"127"},{"ruleId":"120","severity":1,"message":"128","line":3,"column":27,"nodeType":"122","messageId":"123","endLine":3,"endColumn":33},{"ruleId":"120","severity":1,"message":"129","line":3,"column":43,"nodeType":"122","messageId":"123","endLine":3,"endColumn":47},{"ruleId":"130","severity":1,"message":"131","line":23,"column":6,"nodeType":"132","endLine":23,"endColumn":16,"suggestions":"133"},{"ruleId":"134","severity":1,"message":"135","line":10,"column":20,"nodeType":"136","messageId":"137","endLine":10,"endColumn":22},{"ruleId":"134","severity":1,"message":"135","line":17,"column":20,"nodeType":"136","messageId":"137","endLine":17,"endColumn":22},{"ruleId":"134","severity":1,"message":"135","line":24,"column":20,"nodeType":"136","messageId":"137","endLine":24,"endColumn":22},{"ruleId":"120","severity":1,"message":"138","line":6,"column":10,"nodeType":"122","messageId":"123","endLine":6,"endColumn":23},{"ruleId":"120","severity":1,"message":"139","line":6,"column":25,"nodeType":"122","messageId":"123","endLine":6,"endColumn":41},{"ruleId":"120","severity":1,"message":"140","line":7,"column":10,"nodeType":"122","messageId":"123","endLine":7,"endColumn":18},{"ruleId":"120","severity":1,"message":"141","line":7,"column":20,"nodeType":"122","messageId":"123","endLine":7,"endColumn":31},{"ruleId":"130","severity":1,"message":"142","line":16,"column":6,"nodeType":"132","endLine":16,"endColumn":16,"suggestions":"143"},{"ruleId":"144","severity":1,"message":"145","line":59,"column":21,"nodeType":"146","endLine":59,"endColumn":61},{"ruleId":"144","severity":1,"message":"145","line":63,"column":21,"nodeType":"146","endLine":63,"endColumn":61},{"ruleId":"120","severity":1,"message":"147","line":8,"column":8,"nodeType":"122","messageId":"123","endLine":8,"endColumn":28},{"ruleId":"130","severity":1,"message":"148","line":51,"column":6,"nodeType":"132","endLine":51,"endColumn":8,"suggestions":"149"},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"no-unused-vars","'User' is defined but never used.","Identifier","unusedVar",["150"],["151"],["150"],["151"],"'Router' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'users'. Either include it or remove the dependency array.","ArrayExpression",["152"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'showEditModal' is assigned a value but never used.","'setShowEditModal' is assigned a value but never used.","'editData' is assigned a value but never used.","'setEditData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'roles'. Either include it or remove the dependency array.",["153"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'getUserDataHasNoRole' is defined but never used.","React Hook useEffect has a missing dependency: 'user.role'. Either include it or remove the dependency array.",["154"],"no-global-assign","no-unsafe-negation",{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},"Update the dependencies array to be: [setUsers, users]",{"range":"161","text":"162"},"Update the dependencies array to be: [roles, setRoles]",{"range":"163","text":"164"},"Update the dependencies array to be: [user.role]",{"range":"165","text":"166"},[908,918],"[setUsers, users]",[653,663],"[roles, setRoles]",[1441,1443],"[user.role]"]